{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Heystack - RestAPI",
    "description": "OpenAPI 3.0 specification.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "gathering"
    },
    {
      "name": "doc"
    },
    {
      "name": "comment"
    },
    {
      "name": "tag"
    }
  ],
  "paths": {
    "/api/gathering": {
      "get": {
        "tags": ["gathering"],
        "summary": "Get latest 10 gathering",
        "description": "No required request body",
        "operationId": "getGahtering",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GatheringResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/api/doc": {
      "post": {
        "tags": ["doc"],
        "summary": "Add a new doc",
        "description": "Add a new doc to the doc",
        "operationId": "addDoc",
        "requestBody": {
          "description": "Create a new doc in the doc",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Doc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/doc/gathering/{gatheringId}": {
      "get": {
        "tags": ["doc"],
        "summary": "Find docs from a gathering",
        "description": "Returns a docs for a gathering",
        "operationId": "getDocsByGatheringId",
        "parameters": [
          {
            "name": "gatheringId",
            "in": "path",
            "description": "Id of gathering where the docs are",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid gatheringId supplied"
          }
        }
      }
    },
    "/api/doc/{id}": {
      "get": {
        "tags": ["doc"],
        "summary": "Find doc by ID",
        "description": "Returns a single doc",
        "operationId": "getDocById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of doc to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Doc not found"
          }
        }
      },
      "put": {
        "tags": ["doc"],
        "summary": "Update an existing doc",
        "description": "Update an existing doc by Id",
        "operationId": "updateDoc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of doc to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent doc",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Doc"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Doc was updated successfully."
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Gathering not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/comment": {
      "post": {
        "tags": ["comment"],
        "summary": "Add a new comment",
        "description": "Add a new comment to the comment",
        "operationId": "addComment",
        "requestBody": {
          "description": "Create a new comment in the comment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/comment/doc/{id}": {
      "get": {
        "tags": ["comment"],
        "summary": "Get comments for a specific doc",
        "description": "Returns a list of comment",
        "operationId": "getCommentsForDoc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of doc to get comments for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/api/comment/{commentId}": {
      "delete": {
        "tags": ["comment"],
        "summary": "Delete a comment by comment Id",
        "description": "Returns a single comment",
        "operationId": "deleteCommentByCommentId",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of comment to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    },
    "/api/tag/gathering/{gatheringId}": {
      "get": {
        "tags": ["tag"],
        "summary": "Find tags for a gathering",
        "description": "Returns a list of tags",
        "operationId": "getTagByGatheringId",
        "parameters": [
          {
            "name": "gatheringId",
            "in": "path",
            "description": "ID of gathering to return tag",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Doc not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Gathering": {
        "required": ["name", "slug", "description", "owners", "customisation"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name"
          },
          "slug": {
            "type": "string",
            "example": "slug"
          },
          "description": {
            "type": "string",
            "example": "This is an example"
          },
          "owners": {
            "type": "object",
            "example": {
              "emailAddress": "x",
              "nickname": "y"
            }
          },
          "customisation": {
            "type": "object",
            "example": {
              "bannerColor": "red",
              "year": 2020
            }
          }
        }
      },
      "GatheringResponse": {
        "required": ["name", "slug", "description", "owners", "customisation"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "slug": {
            "type": "string",
            "example": "slug"
          },
          "description": {
            "type": "string",
            "example": "This is an example"
          },
          "owners": {
            "type": "object",
            "example": {
              "emailAddress": "x",
              "nickname": "y"
            }
          },
          "customisation": {
            "type": "object",
            "example": {
              "bannerColor": "red",
              "year": 2020
            }
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-08-20T09:33:17.808Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2022-08-20T09:33:17.808Z"
          }
        }
      },
      "Doc": {
        "required": ["gatheringId", "slug", "url", "docUid", "docId", "docType"],
        "type": "object",
        "properties": {
          "gatheringId": {
            "type": "integer",
            "format": "int64"
          },

          "title": {
            "type": "string",
            "example": "name"
          },
          "description": {
            "type": "string",
            "example": "This is a test"
          },
          "tags": {
            "type": "string",
            "example": "tags"
          },
          "approved": {
            "type": "boolean",
            "example": false
          },

          "slug": {
            "type": "string",
            "example": "slug"
          },
          "url": {
            "type": "string",
            "example": "./test.js"
          },
          "docUid": {
            "type": "string",
            "example": "4bc49337-97c5-4ae9-85f3-5b7f6b6186ce"
          },
          "docId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "docType": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },

          "upvotes": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "views": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "reads": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "clicks": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },

          "permissions": {
            "type": "object"
          },
          "meta": {
            "type": "object"
          },
          "payments": {
            "type": "object"
          },

          "contentDate": {
            "type": "integer",
            "example": 2022
          },
          "content": {
            "type": "string",
            "example": "content"
          }
        }
      },
      "DocResponse": {
        "required": ["gatheringId", "slug", "url", "docUid", "docId", "docType"],
        "type": "object",
        "properties": {
          "gatheringId": {
            "type": "integer",
            "format": "int64"
          },

          "title": {
            "type": "string",
            "example": "name"
          },
          "description": {
            "type": "string",
            "example": "This is a test"
          },
          "tags": {
            "type": "string",
            "example": "tags"
          },
          "approved": {
            "type": "boolean",
            "example": false
          },

          "slug": {
            "type": "string",
            "example": "slug"
          },
          "url": {
            "type": "string",
            "example": "./test.js"
          },
          "docUid": {
            "type": "string",
            "example": "4bc49337-97c5-4ae9-85f3-5b7f6b6186ce"
          },
          "docId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "docType": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },

          "upvotes": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "views": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "reads": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "clicks": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },

          "permissions": {
            "type": "object"
          },
          "meta": {
            "type": "object"
          },
          "payments": {
            "type": "object"
          },

          "contentDate": {
            "type": "integer",
            "example": 2022
          },
          "content": {
            "type": "string",
            "example": "content"
          }
        }
      },
      "Comment": {
        "required": ["id", "type", "text", "nickname", "emailAddress", "upvotes", "replyTo"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "text": {
            "type": "string",
            "example": "example text"
          },
          "nickname": {
            "type": "string",
            "example": "Dragon"
          },
          "upvotes": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "replyTo": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      },
      "CommentResponse": {
        "required": ["id", "type", "text", "nickname", "emailAddress", "upvotes", "replyTo"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "text": {
            "type": "string",
            "example": "example text"
          },
          "nickname": {
            "type": "string",
            "example": "Dragon"
          },
          "upvotes": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "replyTo": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2022-08-14T20:16:06.607Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-08-14T20:25:52.052Z"
          }
        }
      },
      "Tag": {
        "required": ["type", "count"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "important"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        }
      }
    },
    "requestBodies": {
      "Gathering": {
        "description": "object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Gathering"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Gathering"
              }
            }
          }
        }
      }
    }
  }
}
